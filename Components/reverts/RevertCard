import React from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { MapPin, MessageCircle, Calendar, Sparkles } from 'lucide-react';
import { format } from 'date-fns';

export default function RevertCard({ revert, onConnect }) {
  const conversionYear = revert.conversion_date ? 
    new Date(revert.conversion_date).getFullYear() : null;
  
  const yearsAsMuslim = conversionYear ? 
    new Date().getFullYear() - conversionYear : 0;

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      whileHover={{ y: -4 }}
      transition={{ duration: 0.3 }}
    >
      <Card className="bg-white/90 backdrop-blur-sm shadow-lg hover:shadow-2xl transition-all duration-300 border-0 rounded-3xl overflow-hidden h-full">
        <CardHeader className="text-center pb-4">
          <div className="flex flex-col items-center">
            <Avatar className="w-20 h-20 border-4 border-emerald-200 mb-4 shadow-lg">
              <AvatarFallback className="bg-gradient-to-br from-emerald-100 to-emerald-200 text-emerald-700 text-xl font-bold">
                {(revert.display_name || revert.full_name || "R").charAt(0)}
              </AvatarFallback>
            </Avatar>
            
            <h3 className="text-xl font-bold text-gray-900 mb-2">
              {revert.display_name || revert.full_name || "Community Member"}
            </h3>
            
            <div className="flex flex-col items-center gap-2 text-sm">
              {revert.location && (
                <div className="flex items-center gap-2 text-emerald-600">
                  <MapPin className="w-4 h-4" />
                  {revert.location}
                </div>
              )}
              
              {conversionYear && (
                <div className="flex items-center gap-2 text-purple-600">
                  <Sparkles className="w-4 h-4" />
                  <span>Muslim for {yearsAsMuslim} {yearsAsMuslim === 1 ? 'year' : 'years'}</span>
                </div>
              )}
            </div>
          </div>
        </CardHeader>

        <CardContent className="space-y-4">
          {revert.bio && (
            <p className="text-gray-700 text-sm leading-relaxed line-clamp-4">
              {revert.bio}
            </p>
          )}

          {revert.interests && revert.interests.length > 0 && (
            <div>
              <p className="text-sm font-semibold text-emerald-800 mb-2">Interests:</p>
              <div className="flex flex-wrap gap-2">
                {revert.interests.slice(0, 3).map((interest, index) => (
                  <Badge
                    key={index}
                    className="bg-emerald-100 text-emerald-800 border-emerald-200 text-xs"
                  >
                    {interest.replace(/_/g, ' ')}
                  </Badge>
                ))}
                {revert.interests.length > 3 && (
                  <Badge variant="outline" className="text-xs">
                    +{revert.interests.length - 3} more
                  </Badge>
                )}
              </div>
            </div>
          )}

          {revert.conversion_date && (
            <div className="flex items-center gap-2 text-sm text-gray-500 pt-2 border-t border-gray-100">
              <Calendar className="w-4 h-4" />
              <span>Reverted {format(new Date(revert.conversion_date), "MMMM yyyy")}</span>
            </div>
          )}

          <div className="pt-4">
            <Button
              onClick={onConnect}
              className="w-full bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white shadow-lg hover:shadow-xl transition-all duration-300"
            >
              <MessageCircle className="w-4 h-4 mr-2" />
              Connect & Chat
            </Button>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}
